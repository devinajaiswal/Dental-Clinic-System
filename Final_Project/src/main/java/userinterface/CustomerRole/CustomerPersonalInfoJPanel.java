/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.CustomerPersonalInfo;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Container;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;

/**
 *
 * @author z9737
 */
public class CustomerPersonalInfoJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPersonalInfoJPanel
     */
    private UserAccount account;
    private final String ACTION_Add = "ADD";
    private final String ACTION_UPDATE = "UPDATE";
    private String action;
    private CustomerPersonalInfo personalInfo;

    public CustomerPersonalInfoJPanel(UserAccount account) {
        initComponents();
        this.account = account;

        comboState.removeAllItems();
        ArrayList<String> states = data.Data.getAllStates();
        for (String state : states) {
            comboState.addItem(state);
        }

        if (!data.UserDAO.isPersonalInfoComplete(account.getUsername())) {
            action = ACTION_Add;
        } else {
            action = ACTION_UPDATE;
            personalInfo = data.UserDAO.searchPersonalInfo(account.getUsername());
            txtFirstName.setText(personalInfo.getFirstName());
            txtFirstName.setEnabled(false);
            txtLastName.setText(personalInfo.getLastName());
            txtLastName.setEnabled(false);
            txtSSN.setText(personalInfo.getSsn());
            txtSSN.setEnabled(false);
            txtStreet.setText(personalInfo.getStreet());
            txtCity.setText(personalInfo.getCity());
            comboState.setSelectedItem(personalInfo.getState());
            txtPostcode.setText(personalInfo.getPostcode());
            txtPhone.setText(personalInfo.getPhone());
            buttonEmailCode.setVisible(false);
            txtEmail.setText(personalInfo.getEmail());
            txtEmail.setEnabled(false);
            labelEmailCode.setVisible(false);
            txtEmailCode.setVisible(false);
        }
    }

    /**
     * This method is called state within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelHead = new javax.swing.JLabel();
        lblRoutingNo = new javax.swing.JLabel();
        lblAccNo = new javax.swing.JLabel();
        txtStreet = new javax.swing.JTextField();
        txtPostcode = new javax.swing.JTextField();
        lblBalance4 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblBalance3 = new javax.swing.JLabel();
        lblRoutingNo1 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblRoutingNo2 = new javax.swing.JLabel();
        labelFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        labelLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        labelDriversLiscence = new javax.swing.JLabel();
        txtSSN = new javax.swing.JTextField();
        buttonPhoneCode = new javax.swing.JButton();
        txtPhoneCode = new javax.swing.JTextField();
        lblBalance5 = new javax.swing.JLabel();
        buttonEmailCode = new javax.swing.JButton();
        txtEmailCode = new javax.swing.JTextField();
        labelEmailCode = new javax.swing.JLabel();
        comboState = new javax.swing.JComboBox<>();

        labelHead.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelHead.setText("Personal Information");

        lblRoutingNo.setText("Street *");

        lblAccNo.setText("Post Code *");

        txtStreet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStreetActionPerformed(evt);
            }
        });

        lblBalance4.setText("Email *");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        lblBalance3.setText("Phone *");

        lblRoutingNo1.setText("City *");

        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        lblRoutingNo2.setText("State *");

        labelFirstName.setText("First Name *");

        labelLastName.setText("Last Name *");

        labelDriversLiscence.setText("SSN *");

        buttonPhoneCode.setText("Send Phone Verification Code");
        buttonPhoneCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPhoneCodeActionPerformed(evt);
            }
        });

        txtPhoneCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneCodeActionPerformed(evt);
            }
        });

        lblBalance5.setText("Phone Code *");

        buttonEmailCode.setText("Send Email Verification Code");
        buttonEmailCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEmailCodeActionPerformed(evt);
            }
        });

        txtEmailCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailCodeActionPerformed(evt);
            }
        });

        labelEmailCode.setText("Email Code *");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelLastName)
                            .addComponent(labelDriversLiscence))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addComponent(txtSSN)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAccNo)
                                    .addComponent(lblRoutingNo)
                                    .addComponent(lblRoutingNo1)
                                    .addComponent(lblRoutingNo2)
                                    .addComponent(lblBalance3)
                                    .addComponent(lblBalance4)
                                    .addComponent(lblBalance5)
                                    .addComponent(labelEmailCode))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelFirstName)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStreet)
                            .addComponent(txtCity)
                            .addComponent(txtPostcode)
                            .addComponent(txtPhone)
                            .addComponent(txtPhoneCode)
                            .addComponent(buttonPhoneCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEmail)
                            .addComponent(labelHead)
                            .addComponent(txtFirstName)
                            .addComponent(buttonEmailCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEmailCode, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboState, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(btnUpdate)))))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(labelHead)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelFirstName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(labelLastName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSSN, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(labelDriversLiscence))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStreet, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(lblRoutingNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(lblRoutingNo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboState, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(lblRoutingNo2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPostcode, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(lblAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(lblBalance3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPhoneCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhoneCode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBalance5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBalance4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonEmailCode)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmailCode, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(labelEmailCode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate)
                .addGap(12, 12, 12))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void txtStreetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStreetActionPerformed
    }//GEN-LAST:event_txtStreetActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        txtStreet.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtCity.setBorder(new LineBorder(new Color(128, 128, 128)));
        comboState.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtPostcode.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtPhone.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtEmail.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtFirstName.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtLastName.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtSSN.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtPhoneCode.setBorder(new LineBorder(new Color(128, 128, 128)));
        txtEmailCode.setBorder(new LineBorder(new Color(128, 128, 128)));
        if (action.equals(ACTION_Add)) {
            if (!userinterface.Util.requireSeletedItemNotNull(this, comboState)) {
                return;
            }

            if (!userinterface.Util.requireNotEmpty(this, txtFirstName, txtLastName, txtSSN, txtStreet, txtCity,
                txtPostcode, txtPhone, txtPhoneCode, txtEmail, txtEmailCode)) {
                return;
            }

            if (data.UserDAO.isSSNExist(txtSSN.getText())) {
                txtSSN.setBorder(new LineBorder(Color.RED));
                JOptionPane.showMessageDialog(this, "This SSN already exists in the system.");
                return;
            }

            if (data.UserDAO.isEmailExist(txtEmail.getText())) {
                txtEmail.setBorder(new LineBorder(Color.RED));
                JOptionPane.showMessageDialog(this, "This Email already exists in the system.");
                return;
            }

            if (!userinterface.Util.requirePostcode(this, txtPostcode)) {
                return;
            }

            if (!userinterface.Util.requirePhoneNumber(this, txtPhone)) {
                return;
            }

            if (!userinterface.Util.requireEmail(this, txtEmail)) {
                return;
            }

            if (!data.UserDAO.checkPhoneCode(account.getUsername(), txtPhoneCode.getText())) {
                txtPhoneCode.setBorder(new LineBorder(Color.RED));
                JOptionPane.showMessageDialog(this, "Phone code doesn't match!");
                return;
            }

            if (!data.UserDAO.checkEmailCode(account.getUsername(), txtEmailCode.getText())) {
                txtEmailCode.setBorder(new LineBorder(Color.RED));
                JOptionPane.showMessageDialog(this, "Email code doesn't match!");
                return;
            }

            CustomerPersonalInfo personalInfo = new CustomerPersonalInfo();
            personalInfo.setFirstName(txtFirstName.getText());
            personalInfo.setLastName(txtLastName.getText());
            personalInfo.setSsn(txtSSN.getText());
            personalInfo.setStreet(txtStreet.getText());
            personalInfo.setCity(txtCity.getText());
            personalInfo.setState((String) comboState.getSelectedItem());
            personalInfo.setPostcode(txtPostcode.getText());
            personalInfo.setPhone(txtPhone.getText());
            personalInfo.setEmail(txtEmail.getText());
            data.UserDAO.createPersonalInfo(account.getUsername(), personalInfo);

            JOptionPane.showMessageDialog(this, "Personal infomation updated successfully.");
            Container container = this.getParent();
            container.removeAll();
            container.add(new JPanel());
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        } else if (action.equals(ACTION_UPDATE)) {
            if (!userinterface.Util.requireSeletedItemNotNull(this, comboState)) {
                return;
            }

            if (!userinterface.Util.requireNotEmpty(this, txtStreet, txtCity, txtPostcode, txtPhone)) {
                return;
            }
            if (!personalInfo.getPhone().equals(txtPhone.getText())) {
                if (!userinterface.Util.requireNotEmpty(this, txtPhoneCode)) {
                    return;
                }
                if (!data.UserDAO.checkPhoneCode(account.getUsername(), txtPhoneCode.getText())) {
                    txtPhoneCode.setBorder(new LineBorder(Color.RED));
                    JOptionPane.showMessageDialog(this, "Phone code doesn't match!");
                    return;
                }
            }
            personalInfo.setStreet(txtStreet.getText());
            personalInfo.setCity(txtCity.getText());
            personalInfo.setState((String) comboState.getSelectedItem());
            personalInfo.setPostcode(txtPostcode.getText());
            personalInfo.setPhone(txtPhone.getText());
            data.UserDAO.updatePersonalInfo(account.getUsername(), personalInfo);
            JOptionPane.showMessageDialog(this, "Personal infomation updated successfully.");
            Container container = this.getParent();
            container.removeAll();
            container.add(new JPanel());
            CardLayout layout = (CardLayout) container.getLayout();
            layout.next(container);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtPhoneCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneCodeActionPerformed
    }//GEN-LAST:event_txtPhoneCodeActionPerformed

    private void txtEmailCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailCodeActionPerformed
    }//GEN-LAST:event_txtEmailCodeActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed

    }//GEN-LAST:event_txtEmailActionPerformed

    private void buttonPhoneCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPhoneCodeActionPerformed
        if (!userinterface.Util.requirePhoneNumber(this, txtPhone)) {
            JOptionPane.showMessageDialog(this, "Phone pattern doesn't match!");
        }
        String code = userinterface.Util.getRandomString(6);
        userinterface.Util.sendSMS(txtPhone.getText(), code);
        data.UserDAO.updatePhoneCode(account.getUsername(), code);
        buttonPhoneCode.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Code sent, please check your phone.");
    }//GEN-LAST:event_buttonPhoneCodeActionPerformed

    private void buttonEmailCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEmailCodeActionPerformed
        if (!userinterface.Util.requireEmail(this, txtEmail)) {
            JOptionPane.showMessageDialog(this, "Email pattern doesn't match!");
            return;
        }
        String code = userinterface.Util.getRandomString(6);
        try {
            userinterface.Util.sendEmail(txtEmail.getText(), "Verification Code", code);
        } catch (MessagingException ex) {
            Logger.getLogger(CustomerPersonalInfoJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        data.UserDAO.updateEmailCode(account.getUsername(), code);
        buttonEmailCode.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Code sent, please check your email.");
    }//GEN-LAST:event_buttonEmailCodeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton buttonEmailCode;
    private javax.swing.JButton buttonPhoneCode;
    private javax.swing.JComboBox<String> comboState;
    private javax.swing.JLabel labelDriversLiscence;
    private javax.swing.JLabel labelEmailCode;
    private javax.swing.JLabel labelFirstName;
    private javax.swing.JLabel labelHead;
    private javax.swing.JLabel labelLastName;
    private javax.swing.JLabel lblAccNo;
    private javax.swing.JLabel lblBalance3;
    private javax.swing.JLabel lblBalance4;
    private javax.swing.JLabel lblBalance5;
    private javax.swing.JLabel lblRoutingNo;
    private javax.swing.JLabel lblRoutingNo1;
    private javax.swing.JLabel lblRoutingNo2;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmailCode;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtPhoneCode;
    private javax.swing.JTextField txtPostcode;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtStreet;
    // End of variables declaration//GEN-END:variables
}
